"""Initial migration

Revision ID: 26b727bb87f9
Revises: 
Create Date: 2024-11-15 13:00:03.143326

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '26b727bb87f9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('Animals', 'farmer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Animals', 'type_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Animals', 'age',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Animals', 'price',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('Breeds', 'type_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Breeds', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('CallbackMetadata', 'transaction_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Cart', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Cart', 'animal_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('FarmersProfile', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('FarmersProfile', 'farm_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('FarmersProfile', 'location',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'FarmersProfile', ['user_id'])
    op.alter_column('Orders', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Orders', 'animal_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Orders', 'order_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('Orders', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('Requests', 'order_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('Requests', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('Requests_order_id_fkey', 'Requests', type_='foreignkey')
    op.create_foreign_key(None, 'Requests', 'Orders', ['order_id'], ['id'])
    op.alter_column('Roles', 'role_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'Roles', ['role_name'])
    op.add_column('Transactions', sa.Column('request_id', sa.Integer(), nullable=False))
    op.drop_constraint('Transactions_Request_id_fkey', 'Transactions', type_='foreignkey')
    op.create_foreign_key(None, 'Transactions', 'Requests', ['request_id'], ['id'])
    op.drop_column('Transactions', 'Request_id')
    op.alter_column('Types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'Types', ['name'])
    op.alter_column('Users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('Users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('Users', 'password_hash',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'Users', ['username'])
    op.create_unique_constraint(None, 'Users', ['email'])
    op.create_unique_constraint(None, 'Users', ['phone_number'])
    op.alter_column('UsersRoles', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('UsersRoles', 'role_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('UsersRoles', 'role_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('UsersRoles', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'Users', type_='unique')
    op.drop_constraint(None, 'Users', type_='unique')
    op.drop_constraint(None, 'Users', type_='unique')
    op.alter_column('Users', 'password_hash',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('Users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('Users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'Types', type_='unique')
    op.alter_column('Types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('Transactions', sa.Column('Request_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'Transactions', type_='foreignkey')
    op.create_foreign_key('Transactions_Request_id_fkey', 'Transactions', 'Requests', ['Request_id'], ['id'])
    op.drop_column('Transactions', 'request_id')
    op.drop_constraint(None, 'Roles', type_='unique')
    op.alter_column('Roles', 'role_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'Requests', type_='foreignkey')
    op.create_foreign_key('Requests_order_id_fkey', 'Requests', 'Orders', ['order_id'], ['order_id'])
    op.alter_column('Requests', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Requests', 'order_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('Orders', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Orders', 'order_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('Orders', 'animal_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Orders', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'FarmersProfile', type_='unique')
    op.alter_column('FarmersProfile', 'location',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('FarmersProfile', 'farm_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('FarmersProfile', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Cart', 'animal_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Cart', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('CallbackMetadata', 'transaction_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Breeds', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('Breeds', 'type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Animals', 'price',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('Animals', 'age',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Animals', 'type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('Animals', 'farmer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
